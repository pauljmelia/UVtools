<UserControl x:Class="UVtools.UI.Controls.Tools.ToolPixelArithmeticControl"
             xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="clr-namespace:UVtools.UI.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:tools="clr-namespace:UVtools.UI.Controls.Tools"
             d:DesignHeight="450"
             d:DesignWidth="800"
             x:DataType="tools:ToolPixelArithmeticControl"
             mc:Ignorable="d">

    <StackPanel Orientation="Vertical"
                Spacing="10">
        <Grid ColumnDefinitions="Auto,10,Auto,20,Auto,10,Auto,20,Auto,10,Auto"
              RowDefinitions="Auto,10,Auto,10,Auto,10,Auto,10,Auto,10,Auto">

            <TextBlock Grid.Row="0"
                       Grid.Column="0"
                       VerticalAlignment="Center"
                       Text="Operator:" />

            <ComboBox Grid.Row="0"
                      Grid.Column="2"
                      Grid.ColumnSpan="9"
                      Width="610"
                      ItemsSource="{Binding Operation.Operator, Converter={StaticResource EnumToCollectionConverter}, Mode=OneTime}"
                      SelectedItem="{Binding Operation.Operator, Converter={StaticResource FromValueDescriptionToEnumConverter}}" />

            <TextBlock Grid.Row="2"
                       Grid.Column="0"
                       VerticalAlignment="Center"
                       IsEnabled="{Binding Operation.IsApplyMethodEnabled}"
                       Text="Apply to:" />

            <ComboBox Grid.Row="2"
                      Grid.Column="2"
                      Grid.ColumnSpan="9"
                      Width="610"
                      IsEnabled="{Binding Operation.IsApplyMethodEnabled}"
                      ItemsSource="{Binding Operation.ApplyMethod, Converter={StaticResource EnumToCollectionConverter}, Mode=OneTime}"
                      SelectedItem="{Binding Operation.ApplyMethod, Converter={StaticResource FromValueDescriptionToEnumConverter}}" />

            <TextBlock Grid.Row="4"
                       Grid.Column="0"
                       VerticalAlignment="Center"
                       IsVisible="{Binding Operation.IsWallSettingVisible}"
                       Text="Wall thickness:" />


            <StackPanel Grid.Row="4"
                        Grid.Column="2"
                        Grid.ColumnSpan="9"
                        IsVisible="{Binding Operation.IsWallSettingVisible}"
                        Orientation="Horizontal"
                        Spacing="10">
                <NumericUpDown Width="80"
                               Maximum="1000"
                               Minimum="0"
                               Value="{Binding Operation.WallThicknessStart}" />

                <TextBlock VerticalAlignment="Center"
                           IsEnabled="{Binding Operation.WallChamfer}"
                           Text="To:" />

                <NumericUpDown Width="80"
                               IsEnabled="{Binding Operation.WallChamfer}"
                               Maximum="1000"
                               Minimum="0"
                               Value="{Binding Operation.WallThicknessEnd}" />

                <TextBlock VerticalAlignment="Center"
                           IsEnabled="{Binding Operation.WallChamfer}"
                           Text="px" />

                <CheckBox Margin="10,0,0,0"
                          Content="Chamfer walls"
                          IsChecked="{Binding Operation.WallChamfer}"
                          ToolTip.Tip="Allow the number of walls pixels to be gradually varied as the operation progresses from the starting layer to the ending layer." />

            </StackPanel>

            <TextBlock Grid.Row="6"
                       Grid.Column="0"
                       VerticalAlignment="Center"
                       Text="Ignore areas:" />

            <StackPanel Grid.Row="6"
                        Grid.Column="2"
                        Grid.ColumnSpan="9"
                        Orientation="Horizontal"
                        Spacing="5">

                <ComboBox Width="150"
                          ItemsSource="{Binding Operation.IgnoreAreaOperator, Converter={StaticResource EnumToCollectionConverter}, Mode=OneTime}"
                          SelectedItem="{Binding Operation.IgnoreAreaOperator, Converter={StaticResource FromValueDescriptionToEnumConverter}}" />

                <NumericUpDown Width="150"
                               Classes="ValueLabel ValueLabel_px2"
                               Maximum="4294967295"
                               Minimum="0"
                               ToolTip.Tip="Ignore all areas smaller or larger than this threshold. &#x0a;0 = Disabled"
                               Value="{Binding Operation.IgnoreAreaThreshold}" />
            </StackPanel>


            <TextBlock Grid.Row="8"
                       Grid.Column="0"
                       VerticalAlignment="Center"
                       IsVisible="{Binding Operation.IsCorrodeVisible}"
                       Text="Diffusion:" />

            <StackPanel Grid.Row="8"
                        Grid.Column="2"
                        Grid.ColumnSpan="9"
                        IsVisible="{Binding Operation.IsCorrodeVisible}"
                        Orientation="Vertical"
                        Spacing="10">

                <StackPanel Orientation="Horizontal"
                            Spacing="10">

                    <TextBlock VerticalAlignment="Center"
                               Text="Noise range:" />

                    <TextBlock VerticalAlignment="Center"
                               Text="Min:" />

                    <NumericUpDown Width="80"
                                   Maximum="1000"
                                   Minimum="-1000"
                                   ToolTip.Tip="Minimum value of random noise offset"
                                   Value="{Binding Operation.NoiseMinOffset}" />

                    <TextBlock VerticalAlignment="Center"
                               Text="Max:" />

                    <NumericUpDown Width="80"
                                   Maximum="1000"
                                   Minimum="-1000"
                                   ToolTip.Tip="Maximum value of random noise offset"
                                   Value="{Binding Operation.NoiseMaxOffset}" />

                    <TextBlock VerticalAlignment="Center"
                               Text="Threshold:" />

                    <NumericUpDown Width="80"
                                   Classes="ValueLabel ValueLabel_sun"
                                   Maximum="255"
                                   Minimum="0"
                                   ToolTip.Tip="Only the pixels with brightness above this threshold are processed"
                                   Value="{Binding Operation.NoiseThreshold}" />
                </StackPanel>

                <StackPanel Orientation="Horizontal"
                            Spacing="10">
                    <TextBlock VerticalAlignment="Center"
                               Text="Noise pixel area:   " />

                    <NumericUpDown Width="80"
                                   Classes="ValueLabel ValueLabel_px2"
                                   Maximum="65535"
                                   Minimum="1"
                                   Value="{Binding Operation.NoisePixelArea}" />

                    <TextBlock VerticalAlignment="Center"
                               Text="Number of passes:" />

                    <NumericUpDown Width="80"
                                   Classes="ValueLabel ValueLabel_times"
                                   Maximum="255"
                                   Minimum="1"
                                   Value="{Binding Operation.NoisePasses}" />
                </StackPanel>

            </StackPanel>

            <TextBlock Grid.Row="8"
                       Grid.Column="0"
                       VerticalAlignment="Center"
                       IsEnabled="{Binding Operation.ValueEnabled}"
                       IsVisible="{Binding Operation.ValueEnabled}"
                       Text="Brightness:" />

            <StackPanel Grid.Row="8"
                        Grid.Column="2"
                        VerticalAlignment="Center"
                        IsEnabled="{Binding Operation.ValueEnabled}"
                        IsVisible="{Binding Operation.ValueEnabled}"
                        Orientation="Horizontal"
                        Spacing="5">

                <NumericUpDown Classes="ValueLabel ValueLabel_sun"
                               IsEnabled="{Binding !Operation.UsePattern}"
                               Maximum="255"
                               Minimum="0"
                               Value="{Binding Operation.Value}" />

                <TextBlock VerticalAlignment="Center"
                           IsEnabled="{Binding !Operation.UsePattern}"
                           Text="{Binding Operation.ValuePercent, StringFormat={}{0}%}" />

                <TextBlock Margin="10,0,0,0"
                           VerticalAlignment="Center"
                           IsEnabled="{Binding !Operation.UsePattern}"
                           Text="Step:"
                           ToolTip.Tip="Mutates the initial brightness with a step that is added/subtracted to the current value dependent on the processed layer count" />

                <NumericUpDown Width="140"
                               Classes="ValueLabel ValueLabel_sun"
                               FormatString="F3"
                               IsEnabled="{Binding !Operation.UsePattern}"
                               Maximum="255"
                               Minimum="-255"
                               Value="{Binding Operation.ValueStep}" />

                <CheckBox Margin="20,0,0,0"
                          Content="Use a pattern instead of fixed brightness"
                          IsChecked="{Binding Operation.UsePattern}"
                          IsVisible="{Binding Operation.IsUsePatternVisible}" />

            </StackPanel>

            <TextBlock Grid.Row="8"
                       Grid.Column="4"
                       HorizontalAlignment="Right"
                       VerticalAlignment="Center"
                       IsEnabled="{Binding Operation.IsThresholdVisible}"
                       IsVisible="{Binding Operation.IsThresholdVisible}"
                       Text="Max.:" />

            <NumericUpDown Grid.Row="8"
                           Grid.Column="6"
                           IsEnabled="{Binding Operation.IsThresholdVisible}"
                           IsVisible="{Binding Operation.IsThresholdVisible}"
                           Maximum="255"
                           Minimum="0"
                           Value="{Binding Operation.ThresholdMaxValue}" />

            <TextBlock Grid.Row="8"
                       Grid.Column="8"
                       HorizontalAlignment="Right"
                       VerticalAlignment="Center"
                       IsEnabled="{Binding Operation.IsThresholdVisible}"
                       IsVisible="{Binding Operation.IsThresholdVisible}"
                       Text="Threshold:" />

            <ComboBox Grid.Row="8"
                      Grid.Column="10"
                      Width="130"
                      IsEnabled="{Binding Operation.IsThresholdVisible}"
                      IsVisible="{Binding Operation.IsThresholdVisible}"
                      ItemsSource="{Binding Operation.ThresholdType, Converter={StaticResource EnumToCollectionConverter}, Mode=OneTime}"
                      SelectedItem="{Binding Operation.ThresholdType, Converter={StaticResource FromValueDescriptionToEnumConverter}}" />


            <TextBlock Grid.Row="10"
                       Grid.Column="0"
                       VerticalAlignment="Center"
                       Text="Presets:" />

            <StackPanel Grid.Row="10"
                        Grid.Column="2"
                        Grid.ColumnSpan="9"
                        VerticalAlignment="Center"
                        Orientation="Vertical"
                        Spacing="5">

                <StackPanel VerticalAlignment="Center"
                            Orientation="Horizontal"
                            Spacing="5">

                    <Button Command="{Binding PresetElephantFootCompensation}"
                            Content="Elephant foot compensation"
                            ToolTip.Tip="This preset will dim/darken wall pixels at a given thickness and brightness. &#x0a;After pick the best looking model from the calibration test, fill the value/brightness with (B) and wall thickness with (W) found on the model." />

                    <Button Command="{Binding Operation.PresetPixelDimming}"
                            Content="Pixel dimming"
                            ToolTip.Tip="This preset will dim/darken pixels with a pattern, on the pattern put the brightness values you want to subtract to each pixel" />

                    <Button Command="{Binding Operation.PresetPixelLightening}"
                            Content="Pixel lightening"
                            ToolTip.Tip="This preset will lightening pixels with a pattern, on the pattern put the brightness values you want to add to each pixel" />

                    <Button Command="{Binding Operation.PresetHalfBrightness}"
                            Content="Half brightness"
                            IsVisible="{Binding Operation.ValueEnabled}" />
                </StackPanel>

                <StackPanel VerticalAlignment="Center"
                            Orientation="Horizontal"
                            Spacing="5">

                    <Button Command="{Binding Operation.PresetFuzzySkin}"
                            Content="Fuzzy skin"
                            ToolTip.Tip="Corrode surface to apply bumps on the surface" />

                    <Button Command="{Binding Operation.PresetStripAntiAliasing}"
                            Content="Strip anti-aliasing"
                            ToolTip.Tip="Binary the image where gray pixels below or equal than 127 will be zeroed and above will turn in whites" />

                    <Button Command="{Binding Operation.PresetHealAntiAliasing}"
                            Content="Heal anti-aliasing"
                            ToolTip.Tip="Discard uncured faded pixels and turn them into solid black (0)" />

                </StackPanel>
            </StackPanel>

        </Grid>

        <Expander HorizontalAlignment="Stretch"
                  Header="Pattern"
                  IsExpanded="True">
            <!--
        <Border.IsVisible>
              <MultiBinding Converter="{x:Static BoolConverters.And}">
                  <Binding Path="Operation.IsUsePatternVisible" />
                  <Binding Path="Operation.UsePattern"/>
              </MultiBinding>
          </Border.IsVisible>-->

            <StackPanel IsEnabled="{Binding Operation.UsePattern}"
                        Spacing="10">

                <!-- <TextBlock Text="Pattern:" FontWeight="Bold"/> -->

                <StackPanel Orientation="Horizontal"
                            Spacing="10">
                    <TextBlock VerticalAlignment="Center"
                               Text="Alternate the pattern every:" />
                    <NumericUpDown Width="150"
                                   Maximum="65535"
                                   Minimum="1"
                                   Value="{Binding Operation.PatternAlternatePerLayersNumber}" />
                    <TextBlock VerticalAlignment="Center"
                               Text="layers" />

                    <CheckBox Margin="20,0,0,0"
                              Content="Invert the pattern when processing the pixels"
                              IsChecked="{Binding Operation.PatternInvert}"
                              ToolTip.Tip="If enabled, it will invert the pattern before apply, that is: 255 - {value}" />
                </StackPanel>


                <Grid ColumnDefinitions="450,10,450"
                      RowDefinitions="Auto,200,10,Auto">

                    <Button Grid.Row="0"
                            Grid.Column="0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            HorizontalContentAlignment="Center"
                            Command="{Binding LoadNormalPatternFromImage}"
                            Content="Load pattern from image" />

                    <TextBox Grid.Row="1"
                             Grid.Column="0"
                             AcceptsReturn="True"
                             Text="{Binding Operation.PatternText}"
                             TextWrapping="NoWrap"
                             UseFloatingWatermark="True"
                             Watermark="Pattern" />

                    <Button Grid.Row="0"
                            Grid.Column="2"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            HorizontalContentAlignment="Center"
                            Command="{Binding LoadAlternatePatternFromImage}"
                            Content="Load alternate pattern from image" />
                    <TextBox Grid.Row="1"
                             Grid.Column="2"
                             AcceptsReturn="True"
                             Text="{Binding Operation.PatternTextAlternate}"
                             TextWrapping="NoWrap"
                             UseFloatingWatermark="True"
                             Watermark="Alternate pattern (Optional)" />

                    <Border Grid.Row="3"
                            Grid.Column="0"
                            Padding="5"
                            BorderBrush="LightGray"
                            BorderThickness="1">

                        <StackPanel Spacing="10">
                            <TextBlock FontWeight="Bold"
                                       Text="Pattern generator" />

                            <StackPanel Orientation="Horizontal"
                                        Spacing="10">
                                <TextBlock VerticalAlignment="Center"
                                           Text="Brightness:" />

                                <NumericUpDown Maximum="255"
                                               Minimum="0"
                                               Value="{Binding Operation.PatternGenMinBrightness}" />

                                <TextBlock VerticalAlignment="Center"
                                           Text="-" />

                                <NumericUpDown Maximum="255"
                                               Minimum="0"
                                               Value="{Binding Operation.PatternGenBrightness}" />

                                <TextBlock VerticalAlignment="Center"
                                           Text="{Binding Operation.PatternGenBrightnessPercent, StringFormat=({0}%)}" />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal"
                                        Spacing="10">
                                <Button Width="100"
                                        Padding="10"
                                        Command="{Binding Operation.GeneratePattern}"
                                        CommandParameter="Chessboard"
                                        Content="Chessboard" />
                                <Button Width="100"
                                        Padding="10"
                                        Command="{Binding Operation.GeneratePattern}"
                                        CommandParameter="Sparse"
                                        Content="Sparse" />
                                <Button Width="100"
                                        Padding="10"
                                        Command="{Binding Operation.GeneratePattern}"
                                        CommandParameter="Crosses"
                                        Content="Crosses" />
                                <Button Width="100"
                                        Padding="10"
                                        Command="{Binding Operation.GeneratePattern}"
                                        CommandParameter="Strips"
                                        Content="Strips" />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal"
                                        Spacing="10">
                                <Button Width="100"
                                        Padding="10"
                                        Command="{Binding Operation.GeneratePattern}"
                                        CommandParameter="Pyramid"
                                        Content="Pyramid" />

                                <Button Width="100"
                                        Padding="10"
                                        Command="{Binding Operation.GeneratePattern}"
                                        CommandParameter="Rhombus"
                                        Content="Rhombus" />
                                <Button Width="100"
                                        Padding="10"
                                        Command="{Binding Operation.GeneratePattern}"
                                        CommandParameter="Waves"
                                        Content="Waves" />
                                <Button Width="100"
                                        Padding="10"
                                        Command="{Binding Operation.GeneratePattern}"
                                        CommandParameter="Slashes"
                                        Content="Slashes" />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal"
                                        Spacing="10">
                                <Button Width="100"
                                        Padding="10"
                                        Command="{Binding Operation.GeneratePattern}"
                                        CommandParameter="Hearts"
                                        Content="Hearts" />
                                <Button Width="100"
                                        Padding="10"
                                        Command="{Binding Operation.GeneratePattern}"
                                        CommandParameter="Solid"
                                        Content="Solid" />
                            </StackPanel>

                        </StackPanel>
                    </Border>

                    <Border Grid.Row="3"
                            Grid.Column="2"
                            Padding="5"
                            BorderBrush="LightGray"
                            BorderThickness="1">

                        <StackPanel Spacing="10">
                            <TextBlock FontWeight="Bold"
                                       Text="Infill generator" />

                            <TextBlock Text="Warning: This function can generate a large number of resin traps. (Use with caution)"
                                       TextWrapping="Wrap" />

                            <Grid ColumnDefinitions="Auto,10,180"
                                  RowDefinitions="Auto,10,Auto">
                                <TextBlock VerticalAlignment="Center"
                                           Text="Thickness:" />
                                <NumericUpDown Grid.Row="0"
                                               Grid.Column="2"
                                               Classes="ValueLabel ValueLabel_px"
                                               Maximum="10000"
                                               Minimum="5"
                                               Value="{Binding Operation.PatternGenInfillThickness}" />

                                <TextBlock Grid.Row="2"
                                           Grid.Column="0"
                                           VerticalAlignment="Center"
                                           Text="Spacing:" />
                                <NumericUpDown Grid.Row="2"
                                               Grid.Column="2"
                                               Classes="ValueLabel ValueLabel_px"
                                               Maximum="10000"
                                               Minimum="5"
                                               Value="{Binding Operation.PatternGenInfillSpacing}" />
                            </Grid>

                            <StackPanel Orientation="Horizontal"
                                        Spacing="10">
                                <Button Width="100"
                                        Padding="10"
                                        Command="{Binding Operation.GenerateInfill}"
                                        CommandParameter="Rectilinear"
                                        Content="Rectilinear" />
                                <Button Width="100"
                                        Padding="10"
                                        Command="{Binding Operation.GenerateInfill}"
                                        CommandParameter="Square grid"
                                        Content="Square grid" />
                                <Button Width="100"
                                        Padding="10"
                                        Command="{Binding Operation.GenerateInfill}"
                                        CommandParameter="Waves"
                                        Content="Waves" />
                                <Button Width="100"
                                        Padding="10"
                                        Command="{Binding Operation.GenerateInfill}"
                                        CommandParameter="Lattice"
                                        Content="Lattice" />
                            </StackPanel>
                        </StackPanel>
                    </Border>

                </Grid>

            </StackPanel>
        </Expander>

        <Expander Margin="0,10,0,0"
                  HorizontalAlignment="Stretch"
                  Header="Kernel - Advanced options (Click to expand)"
                  IsVisible="{Binding Operation.IsWallSettingVisible}">
            <controls:KernelControl Name="KernelCtrl"
                                    Margin="0,10,0,0"
                                    Kernel="{Binding $parent.((tools:ToolPixelArithmeticControl)DataContext).Operation.Kernel}" />
        </Expander>

    </StackPanel>

</UserControl>
